export interface Position {
  x: number;
  y: number;
}

export interface BotStatus extends Position {
  _id?: string;
  battery: number;
  fertilizer_level: number;
  status: 'idle' | 'moving' | 'watering' | 'fertilizing' | 'scanning' | 'charging' | 'error';
  isMoving: boolean;
  lastUpdate: string; // ISO date string
}

export interface Task {
  _id: string;
  name: string;
  description: string;
  action: 'water_all' | 'fertilize_all' | 'move_to' | 'custom';
  schedule_type: 'once' | 'daily' | 'weekly';
  schedule_time: string;
  schedule_day?: number; // 0 for Sunday, 6 for Saturday
  priority: number;
  target_position: Position;
  active: boolean;
  next_execution: string; // ISO date string
  last_executed?: string; // ISO date string
  execution_count: number;
}

export interface NewTask extends Omit<Task, '_id' | 'active' | 'next_execution' | 'last_executed' | 'execution_count'> {
  // All properties from Task except the ones generated by the backend
}

export interface Waypoint {
  x: number;
  y: number;
  action: 'move' | 'water' | 'fertilize' | 'wait' | 'scan';
  order: number;
  duration?: number;
  notes?: string;
}

export interface SavedPath {
  _id?: string; // Changed from 'id' to '_id' to match MongoDB convention
  name:string;
  waypoints: Waypoint[];
  created_at: string; // ISO date string
}

export type AlertSeverity = 'critical' | 'warning' | 'info';
export type AlertType = 'low_battery' | 'low_fertilizer' | 'low_water' | 'plant_health' | 'system_error' | 'task_failed' | 'maintenance_due';
export type AlertStatus = 'unresolved' | 'resolved' | 'acknowledged';

export interface Alert {
  _id: string;
  type: AlertType;
  severity: AlertSeverity;
  message: string;
  data?: any; // Can be more specific if data structure is known
  resolved: boolean;
  acknowledged: boolean;
  created_at: string; // ISO date string
}

export interface AlertStats {
  criticalAlerts: number;
  unresolvedAlerts: number;
  totalAlerts: number;
  alertsByType: { _id: AlertType, count: number }[];
}
